{
  "_format": "hh3-sol-build-info-1",
  "id": "solc-0_8_28-711c4381a509ef0b8cab8f773d82d729de5c80ca",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "userSourceNameMap": {
    "contracts/Calculator.sol": "project/contracts/Calculator.sol"
  },
  "input": {
    "language": "Solidity",
    "settings": {
      "evmVersion": "cancun",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "remappings": []
    },
    "sources": {
      "project/contracts/Calculator.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract Calculator {\n int256 private result;\n event CalculationPerformed(string operation, int256 a, int256 b, int256 result);\n\n constructor(int256 _initialResult) {\n  result = _initialResult;\n  emit CalculationPerformed(\"Initialized\", 0, 0, result);\n }\n\n function add(int256 a, int256 b) public returns (int256) {\n  result = a + b;\n  emit CalculationPerformed(\"Addition\", a, b, result);\n  return result;\n } \n\n function sub(int256 a, int256 b) public returns (int256) {\n  result = a - b;\n  emit CalculationPerformed(\"Subtraction\", a, b, result);\n  return result;\n }\n\n function mul(int256 a, int256 b) public returns (int256) {\n  result = a * b;\n  emit CalculationPerformed(\"Multiplication\", a, b, result);\n  return result;\n }\n\n function dev(int256 a, int256 b) public returns (int256) {\n  require(!(b == 0), \"Division by zero\");\n  result = a / b;\n  emit CalculationPerformed(\"Division\", a, b, result);\n  return result;\n }\n\n function getLastResult() public view returns (int256) {\n  return result;\n }\n\n}"
      }
    }
  }
}